# SPDX-FileCopyrightText: 2024 Eric Z. Ayers
#
# SPDX-License-Identifier: Creative Commons Zero 1.0

"""Collect training data from a color sensor and publish it to Adafruit IO """

import board
import busio
import time
import pwmio
import adafruit_tcs34725


pwm = pwmio.PWMOut(board.GP1 duty_cycle=2 ** 15, frequency=50)
pwm = pwmio.PWMOut(board.GP2duty_cycle=2 ** 15, frequency=50)

my_servo1 = servo.Servo(pwm)
my_servo2 = servo.Servo(pwm)

##################
# *EDIT*
# Set configurable values below
# Feed name for Adafruit IO

# milliseconds to gather color data
sensor_integration_time = 150

# manually override the color sensor gain
sensor_gain = 4

# Collect this many samples each time we prompt the user
num_samples = 5

#
# End of editable config values
##################

# Create sensor object, communicating over the board's default I2C bus
i2c = busio.I2C(board.GP1, board.GP0)  # uses first I2C SCA/SCL pair on pico
sensor = adafruit_tcs34725.TCS34725(i2c)

# Change sensor gain to 1, 4, 16, or 60
sensor.gain = sensor_gain
# Change sensor integration time to values between 2.4 and 614.4 milliseconds
sensor.integration_time = sensor_integration_time
    
while True:
    my_servo1.angle = 0
    time.sleep(2)
    my_servo1.angle = 60
    time.sleep(2)
    my_servo.angle = 100
    time.sleep(2)
if temp > 3100 and  r > 30 and g > 15 and b > 2:
    my_servo2.angle = 20
if temp > 2700  and  r < 50 and g < 18 and b > 3 :
    my_servo2.angle = 40 
if temp > 2800  and  r < 48 and g < 20 and b < 5:
    my_servo2.angle = 60
if temp > 3000 and  r < 40  and g < 20 and b > 6:
    my_servo2.angle = 60
if temp < 3000  and  r > 45  and g > 14 and b < 6:
    my_servo2.angle = 60
    

while True:
    time.sleep(1)
    print("Temperature: %d" % sensor.color_temperature)
    print(
        "r: %d, g: %d, b: %d"
        % (
            sensor.color_rgb_bytes[0],
            sensor.color_rgb_bytes[1],
            sensor.color_rgb_bytes[2],
        )
    )
    print("Lux: %d" % sensor.lux)
    temp = sensor.color_temperature
    lux = sensor.lux
    r =  sensor.color_rgb_bytes[0]
    g =  sensor.color_rgb_bytes[1]
    b =  sensor.color_rgb_bytes[2]
    print(r,g,b)

    if temp > 3100 and  r > 30 and g > 15 and b > 2:
        print ("green")

    if  temp > 2700  and  r < 50 and g < 18 and b > 3 :
        print ("orange")

    if  temp > 2800  and  r < 48 and g < 20 and b < 5:
        print ("yellow")

    if temp > 3000 and  r < 40  and g < 20 and b > 6:
        print ("blue")

    if temp < 3000  and  r > 45  and g > 14 and b < 6:
        print ("pink")
    else:
        print("nothing detected")
        
    

